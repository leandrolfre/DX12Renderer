//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbPerObject
// {
//
//   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
//   uint gMaterialIndex;               // Offset:   64 Size:     4
//   uint pad1;                         // Offset:   68 Size:     4 [unused]
//   uint pad2;                         // Offset:   72 Size:     4 [unused]
//   uint pad3;                         // Offset:   76 Size:     4 [unused]
//
// }
//
// cbuffer cbPerPass
// {
//
//   float4x4 gView;                    // Offset:    0 Size:    64 [unused]
//   float4x4 gInvView;                 // Offset:   64 Size:    64 [unused]
//   float4x4 gProj;                    // Offset:  128 Size:    64 [unused]
//   float4x4 gInvProj;                 // Offset:  192 Size:    64 [unused]
//   float4x4 gViewProj;                // Offset:  256 Size:    64 [unused]
//   float4x4 gInvViewProj;             // Offset:  320 Size:    64 [unused]
//   float3 gEyePosW;                   // Offset:  384 Size:    12
//   float cbPerObjectPad1;             // Offset:  396 Size:     4 [unused]
//   float2 gRenderTargetSize;          // Offset:  400 Size:     8 [unused]
//   float2 gInvRenderTargetSize;       // Offset:  408 Size:     8 [unused]
//   float gNearZ;                      // Offset:  416 Size:     4 [unused]
//   float gFarZ;                       // Offset:  420 Size:     4 [unused]
//   float gTotalTime;                  // Offset:  424 Size:     4 [unused]
//   float gDeltaTime;                  // Offset:  428 Size:     4 [unused]
//   float4 gAmbientLight;              // Offset:  432 Size:    16
//   
//   struct Light
//   {
//       
//       float3 Strength;               // Offset:  448
//       float FalloffStart;            // Offset:  460
//       float3 Direction;              // Offset:  464
//       float FalloffEnd;              // Offset:  476
//       float3 Position;               // Offset:  480
//       float SpotPower;               // Offset:  492
//
//   } gLights[16];                     // Offset:  448 Size:   768
//
// }
//
// Resource bind info for gMaterialData
// {
//
//   struct MaterialData
//   {
//       
//       float4 DiffuseAlbedo;          // Offset:    0
//       float3 FresnelR0;              // Offset:   16
//       float Roughness;               // Offset:   28
//       uint DiffuseMapIndex;          // Offset:   32
//       uint MatPad0;                  // Offset:   36
//       uint MatPad1;                  // Offset:   40
//       uint MatPad2;                  // Offset:   44
//
//   } $Element;                        // Offset:    0 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      ID      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- ------- -------------- ------
// gLinearSample                     sampler      NA          NA      S0             s0      1 
// gDiffuseMap                       texture  float4          2d      T0             t1      2 
// gMaterialData                     texture  struct         r/o      T1      t0,space1      1 
// cbPerObject                       cbuffer      NA          NA     CB0            cb0      1 
// cbPerPass                         cbuffer      NA          NA     CB1            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_1
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[0:0][5], immediateIndexed, space=0
dcl_constantbuffer CB1[1:1][30], immediateIndexed, space=0
dcl_sampler S0[0:0], mode_default, space=0
dcl_resource_texture2d (float,float,float,float) T0[1:2], space=0
dcl_resource_structured T1[0:0], 48, space=1
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_temps 9
dcl_indexableTemp x0[3], 4
//
// Initial variable locations:
//   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
//   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
//   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
//   v3.x <- pin.TexCoord.x; v3.y <- pin.TexCoord.y; 
//   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
//
#line 51 "C:\gamedev\DX12Renderer\dx12\DX12HelloWorld\Shaders\color_SD.hlsl"
ld_structured r0.x, CB0[0][4].x, l(12), T1[0].xxxx  // r0.x <- matData.DiffuseAlbedo.w
ld_structured r0.y, CB0[0][4].x, l(28), T1[0].xxxx  // r0.y <- matData.Roughness
ld_structured r0.z, CB0[0][4].x, l(32), T1[0].xxxx  // r0.z <- matData.DiffuseMapIndex

#line 53
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v2.xyzx  // r1.x <- pin.NormalW.x; r1.y <- pin.NormalW.y; r1.z <- pin.NormalW.z

#line 54
mov r2.xyz, -v1.xyzx
add r2.xyz, r2.xyzx, CB1[1][24].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx  // r2.x <- viewDir.x; r2.y <- viewDir.y; r2.z <- viewDir.z

#line 55
sample r3.yzw, v3.xyxx, T0[r0.z + 1].wxyz, S0[0]
mov r3.yzw, r3.yyzw  // r3.y <- diffuse.x; r3.z <- diffuse.y; r3.w <- diffuse.z

#line 56
mul r4.xyz, r3.yzwy, CB1[1][27].xyzx  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z

#line 57
mov r0.y, -r0.y
add r3.x, r0.y, l(1.000000)  // r3.x <- shininess

#line 58
mov r3.yzw, r3.yyzw  // r3.y <- mat.DiffuseAlbedo.x; r3.z <- mat.DiffuseAlbedo.y; r3.w <- mat.DiffuseAlbedo.z
mov r3.x, r3.x  // r3.x <- mat.Shininess

#line 60
mov r0.yzw, l(0,1.000000,1.000000,1.000000)  // r0.y <- shadowFactor.x; r0.z <- shadowFactor.y; r0.w <- shadowFactor.z

#line 62
nop 
mov x0[0].xyz, CB1[1][28].xyzx
mov x0[2].xyz, CB1[1][29].xyzx
mov r3.xyzw, r3.xyzw
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r0.yzw, r0.yyzw

#line 79 "C:\gamedev\DX12Renderer\dx12\DX12HelloWorld\Shaders\inc\LightingUtils.hlsli"
mov r5.xyz, l(0,0,0,0)  // r5.x <- result.x; r5.y <- result.y; r5.z <- result.z

#line 84
nop 
mov r6.xyz, x0[0].xyzx
mov r7.xyz, x0[2].xyzx
mov r3.xyzw, r3.xyzw
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx

#line 31
dp3 r1.w, r7.xyzx, r7.xyzx
rsq r1.w, r1.w
mul r7.xyz, r1.wwww, r7.xyzx
mov r7.xyz, -r7.xyzx  // r7.x <- lightDir.x; r7.y <- lightDir.y; r7.z <- lightDir.z

#line 32
dp3 r1.w, r7.xyzx, r1.xyzx
max r1.w, r1.w, l(0.000000)
mul r8.xyz, r1.wwww, r6.xyzx  // r8.x <- diffuse.x; r8.y <- diffuse.y; r8.z <- diffuse.z

#line 33
mul r3.yzw, r3.yyzw, r8.xxyz
nop 
mov r6.xyz, r6.xyzx
mov r7.xyz, r7.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r3.x, r3.x

#line 16
mul r1.w, r3.x, l(1024.000000)  // r1.w <- m

#line 17
add r2.xyz, r7.xyzx, r2.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx  // r2.x <- halfVec.x; r2.y <- halfVec.y; r2.z <- halfVec.z

#line 18
mov r2.w, l(0.800000)  // r2.w <- specStrength

#line 19
dp3 r1.x, r1.xyzx, r2.xyzx
max r1.x, r1.x, l(0.000000)
log r1.x, r1.x
mul r1.x, r1.x, r1.w
exp r1.x, r1.x
mul r1.x, r2.w, r1.x
mul r1.xyz, r6.xyzx, r1.xxxx  // r1.x <- specular.x; r1.y <- specular.y; r1.z <- specular.z

#line 20
mov r1.xyz, r1.xyzx  // r1.x <- <BlinnPhong return value>.x; r1.y <- <BlinnPhong return value>.y; r1.z <- <BlinnPhong return value>.z

#line 33
add r1.xyz, r1.xyzx, r3.yzwy  // r1.x <- <ComputeDirectionalLight return value>.x; r1.y <- <ComputeDirectionalLight return value>.y; r1.z <- <ComputeDirectionalLight return value>.z

#line 84
mul r0.yzw, r0.yyzw, r1.xxyz
add r0.yzw, r0.yyzw, r5.xxyz  // r0.y <- result.x; r0.z <- result.y; r0.w <- result.z

#line 102
mov r0.yzw, r0.yyzw  // r0.y <- <ComputeLighting return value>.x; r0.z <- <ComputeLighting return value>.y; r0.w <- <ComputeLighting return value>.z

#line 62 "C:\gamedev\DX12Renderer\dx12\DX12HelloWorld\Shaders\color_SD.hlsl"
mov r0.yzw, r0.yyzw  // r0.y <- directLight.x; r0.z <- directLight.y; r0.w <- directLight.z

#line 63
add r0.yzw, r0.yyzw, r4.xxyz  // r0.y <- litColor.x; r0.z <- litColor.y; r0.w <- litColor.z

#line 65
mov r0.x, r0.x  // r0.x <- litColor.w

#line 67
mov o0.xyz, r0.yzwy
mov o0.w, r0.x
ret 
// Approximately 71 instruction slots used
