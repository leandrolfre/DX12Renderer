//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// TANGENT                  0   xyz         1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEX                      0   xy          3     NONE   float   xy  
// TEX                      1   xy          4     NONE   float       
// COLOR                    0   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_1
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_input v0.xyz
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
//   v1.x <- vin.Tangent.x; v1.y <- vin.Tangent.y; v1.z <- vin.Tangent.z; 
//   v2.x <- vin.Normal.x; v2.y <- vin.Normal.y; v2.z <- vin.Normal.z; 
//   v3.x <- vin.Tex0.x; v3.y <- vin.Tex0.y; 
//   v4.x <- vin.Tex1.x; v4.y <- vin.Tex1.y; 
//   v5.x <- Color.x; v5.y <- Color.y; v5.z <- Color.z; v5.w <- Color.w; 
//   o1.x <- <VS return value>.TexCoord.x; o1.y <- <VS return value>.TexCoord.y; 
//   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
//
#line 29 "C:\gamedev\DX12Renderer\dx12\DX12HelloWorld\Shaders\quad_SD.hlsl"
mov r0.xyz, v0.xyzx  // r0.x <- vout.PosH.x; r0.y <- vout.PosH.y; r0.z <- vout.PosH.z
mov r0.w, l(1.000000)  // r0.w <- vout.PosH.w

#line 30
mov r1.xy, v3.xyxx  // r1.x <- vout.TexCoord.x; r1.y <- vout.TexCoord.y

#line 31
mov o0.xyzw, r0.xyzw
mov o1.xy, r1.xyxx
ret 
// Approximately 6 instruction slots used
