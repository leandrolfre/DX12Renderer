//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbPerObject
// {
//
//   float4x4 gWorld;                   // Offset:    0 Size:    64
//   uint gMaterialIndex;               // Offset:   64 Size:     4 [unused]
//   uint pad1;                         // Offset:   68 Size:     4 [unused]
//   uint pad2;                         // Offset:   72 Size:     4 [unused]
//   uint pad3;                         // Offset:   76 Size:     4 [unused]
//
// }
//
// cbuffer cbPerPass
// {
//
//   float4x4 gView;                    // Offset:    0 Size:    64 [unused]
//   float4x4 gInvView;                 // Offset:   64 Size:    64 [unused]
//   float4x4 gProj;                    // Offset:  128 Size:    64 [unused]
//   float4x4 gInvProj;                 // Offset:  192 Size:    64 [unused]
//   float4x4 gViewProj;                // Offset:  256 Size:    64 [unused]
//   float4x4 gInvViewProj;             // Offset:  320 Size:    64 [unused]
//   float3 gEyePosW;                   // Offset:  384 Size:    12 [unused]
//   float cbPerObjectPad1;             // Offset:  396 Size:     4 [unused]
//   float2 gRenderTargetSize;          // Offset:  400 Size:     8 [unused]
//   float2 gInvRenderTargetSize;       // Offset:  408 Size:     8 [unused]
//   float gNearZ;                      // Offset:  416 Size:     4 [unused]
//   float gFarZ;                       // Offset:  420 Size:     4 [unused]
//   float gTotalTime;                  // Offset:  424 Size:     4 [unused]
//   float gDeltaTime;                  // Offset:  428 Size:     4 [unused]
//   float4 gAmbientLight;              // Offset:  432 Size:    16 [unused]
//   
//   struct Light
//   {
//       
//       float3 Strength;               // Offset:  448
//       float FalloffStart;            // Offset:  460
//       float3 Direction;              // Offset:  464
//       float FalloffEnd;              // Offset:  476
//       float3 Position;               // Offset:  480
//       float SpotPower;               // Offset:  492
//       float4x4 ShadowViewProj;       // Offset:  496
//       float4x4 ShadowTransform;      // Offset:  560
//
//   } gLights[16];                     // Offset:  448 Size:  2816
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      ID      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- ------- -------------- ------
// cbPerObject                       cbuffer      NA          NA     CB0            cb0      1 
// cbPerPass                         cbuffer      NA          NA     CB1            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// TANGENT                  0   xyz         1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEX                      0   xy          3     NONE   float       
// TEX                      1   xy          4     NONE   float       
// COLOR                    0   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
vs_5_1
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[0:0][4], immediateIndexed, space=0
dcl_constantbuffer CB1[1:1][35], immediateIndexed, space=0
dcl_input v0.xyz
dcl_output_siv o0.xyzw, position
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
//   v1.x <- vin.Tangent.x; v1.y <- vin.Tangent.y; v1.z <- vin.Tangent.z; 
//   v2.x <- vin.Normal.x; v2.y <- vin.Normal.y; v2.z <- vin.Normal.z; 
//   v3.x <- vin.Tex0.x; v3.y <- vin.Tex0.y; 
//   v4.x <- vin.Tex1.x; v4.y <- vin.Tex1.y; 
//   v5.x <- Color.x; v5.y <- Color.y; v5.z <- Color.z; v5.w <- Color.w; 
//   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
//
#line 21 "C:\gamedev\DX12Renderer\dx12\DX12HelloWorld\Shaders\shadow_SD.hlsl"
mul r0.xyzw, v0.xxxx, CB0[0][0].xyzw
mul r1.xyzw, v0.yyyy, CB0[0][1].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, v0.zzzz, CB0[0][2].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, CB0[0][3].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- posW.x; r0.y <- posW.y; r0.z <- posW.z; r0.w <- posW.w

#line 22
mul r1.xyzw, r0.xxxx, CB1[1][31].xyzw
mul r2.xyzw, r0.yyyy, CB1[1][32].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r0.zzzz, CB1[1][33].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r0.xyzw, r0.wwww, CB1[1][34].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- vout.PosH.x; r0.y <- vout.PosH.y; r0.z <- vout.PosH.z; r0.w <- vout.PosH.w

#line 24
mov o0.xyzw, r0.xyzw
ret 
// Approximately 16 instruction slots used
